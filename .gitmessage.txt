# Title: Summary, imperative, start upper case, don't end with a period
# No more than 50 chars. #### 50 chars is here:  #
# e.g <type>(<scope>): <subject>, feat: add hat wobble


# Body: Explain *what* and *why* (not *how*). Include task ID (Jira issue).
# Wrap at 72 chars. ################################## which is here:  #

# Issue #
# Close #

############### Commit type
# feat: addition of a new feature or functionality to the codebase
#       e.g. [feat]: Implement user registration process
# fix: a bug fix or correction e.g.fix: Resolve issue with login validation
#       e.g. [fix]: Resolve issue with login validation
# refactor: code refactoring without changing the functionality. 
#       e.g. [refactor]: Reorganize database query functions
# chore: maintenance tasks or other changes that do not affect the functionality
#       e.g. [chore]: Update npm packages to latest versions
# test:  adding, modifying, or improving tests, including unit tests, integration tests, or end-to-end tests.
#       e.g. [test]: Add unit tests for authentication module
# revert: undo a previous commit. It provides information about why and what is being reverted
#       e.g. [revert]: Revert "Implement user authentication feature"
# docs: changes to the READMEs, comments, or documentation generation 
#       e.g. [docs]: Update API documentation for endpoint
# style: code style or formatting improvements, whitespace changes, indentation, or formatting consistency.
#       e.g. [style]: Format code according to style guide
# rename : renaming or relocating files/folders only
# remove : deleting files/folders only

############### Check list 
# <subject>
# [] Start the title with a capital letter
# [] Did you write the title in the form of a command?
# [] Do not use periods in the title
# [] Include an empty line between the subject and body
# <body> 
# [] Using bullet points (*) to list the individual changes
# [] It should be written in the form of declarative sentences
# [] Focus on what and why rather than how. It helps understand the purpose of the changes 

################ Git Configuration
# git config --global commit.template .gitmessage.txt